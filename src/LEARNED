virtualenv erschafft eine virtuelle "sandbox"-like umgebung mit eigenen pip packages, sodass keine konflikte entstehen

django-admin.exe macht ein project

manage.py steuert das ganze projekt, alle weitere parameter sind steuerkommandos für wie website und der datenbank und generell der ganzen zusammenhänge

models: klasse(n), die wie kleine "applets" , APPS genannt, in eine webseite integrierbar sind.
        bisher wurden damit nur klassifizerte und typisierte daten in die datenbank gespeichert

settings.py ist die "einstellungsdatei"; alle depencies sind dort deklariert, alle genutzten module, "apps"

url routing in settings.py
you can there set up by which names site urls can get called

templates are html files which get rendered and sent as responses to site requests
these documents can inherit code snippets by the {% block blockname %} {% endblock %}

you can extend existing sites by using {% extends "file.html}
you can include spicific code snippet-like in a line of a html documents using {%include "file.html"}